// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PhlegmaticOne.InnoGotchi.Data.EntityFramework.Context;

#nullable disable

namespace PhlegmaticOne.InnoGotchi.Data.EntityFramework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221124183119_enums-to-int-moved")]
    partial class enumstointmoved
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.Avatar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("AvatarData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserProfileId")
                        .IsUnique();

                    b.ToTable("Avatar");
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.Collaboration", b =>
                {
                    b.Property<Guid>("UserProfileId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FarmId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserProfileId", "FarmId");

                    b.HasIndex("FarmId");

                    b.ToTable("Collaborations", (string)null);
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.Farm", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Farms", (string)null);
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.FarmStatistics", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<TimeSpan>("AverageDrinkTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("AverageFeedTime")
                        .HasColumnType("time");

                    b.Property<Guid>("FarmId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastDrinkTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastFeedTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalDrinkingsCount")
                        .HasColumnType("int");

                    b.Property<int>("TotalFeedingsCount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FarmId")
                        .IsUnique();

                    b.ToTable("FarmStatistics", (string)null);
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.InnoGotchiComponent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("InnoGotchiComponents", (string)null);
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.InnoGotchiModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("AgeUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DeadSince")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FarmId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HappinessDaysCount")
                        .HasColumnType("int");

                    b.Property<int>("HungerLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<DateTime>("LastDrinkTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastFeedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LiveSince")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ThirstyLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("Id");

                    b.HasIndex("FarmId");

                    b.ToTable("InnoGotchies", (string)null);
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.InnoGotchiModelComponent", b =>
                {
                    b.Property<Guid>("InnoGotchiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ComponentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("ScaleX")
                        .HasColumnType("real");

                    b.Property<float>("ScaleY")
                        .HasColumnType("real");

                    b.Property<float>("TranslationX")
                        .HasColumnType("real");

                    b.Property<float>("TranslationY")
                        .HasColumnType("real");

                    b.HasKey("InnoGotchiId", "ComponentId");

                    b.HasIndex("ComponentId");

                    b.ToTable("InnoGotchiModelComponents", (string)null);
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.UserProfile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("UserProfiles", (string)null);
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.Avatar", b =>
                {
                    b.HasOne("PhlegmaticOne.InnoGotchi.Domain.Models.UserProfile", "UserProfile")
                        .WithOne("Avatar")
                        .HasForeignKey("PhlegmaticOne.InnoGotchi.Domain.Models.Avatar", "UserProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserProfile");
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.Collaboration", b =>
                {
                    b.HasOne("PhlegmaticOne.InnoGotchi.Domain.Models.Farm", "Farm")
                        .WithMany("Collaborations")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhlegmaticOne.InnoGotchi.Domain.Models.UserProfile", "Collaborator")
                        .WithMany("Collaborations")
                        .HasForeignKey("UserProfileId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Collaborator");

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.Farm", b =>
                {
                    b.HasOne("PhlegmaticOne.InnoGotchi.Domain.Models.UserProfile", "Owner")
                        .WithOne("Farm")
                        .HasForeignKey("PhlegmaticOne.InnoGotchi.Domain.Models.Farm", "OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.FarmStatistics", b =>
                {
                    b.HasOne("PhlegmaticOne.InnoGotchi.Domain.Models.Farm", "Farm")
                        .WithOne("FarmStatistics")
                        .HasForeignKey("PhlegmaticOne.InnoGotchi.Domain.Models.FarmStatistics", "FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.InnoGotchiModel", b =>
                {
                    b.HasOne("PhlegmaticOne.InnoGotchi.Domain.Models.Farm", "Farm")
                        .WithMany("InnoGotchies")
                        .HasForeignKey("FarmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Farm");
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.InnoGotchiModelComponent", b =>
                {
                    b.HasOne("PhlegmaticOne.InnoGotchi.Domain.Models.InnoGotchiComponent", "InnoGotchiComponent")
                        .WithMany("InnoGotchiModelComponents")
                        .HasForeignKey("ComponentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PhlegmaticOne.InnoGotchi.Domain.Models.InnoGotchiModel", "InnoGotchi")
                        .WithMany("Components")
                        .HasForeignKey("InnoGotchiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InnoGotchi");

                    b.Navigation("InnoGotchiComponent");
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.UserProfile", b =>
                {
                    b.HasOne("PhlegmaticOne.InnoGotchi.Domain.Models.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("PhlegmaticOne.InnoGotchi.Domain.Models.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.Farm", b =>
                {
                    b.Navigation("Collaborations");

                    b.Navigation("FarmStatistics")
                        .IsRequired();

                    b.Navigation("InnoGotchies");
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.InnoGotchiComponent", b =>
                {
                    b.Navigation("InnoGotchiModelComponents");
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.InnoGotchiModel", b =>
                {
                    b.Navigation("Components");
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.User", b =>
                {
                    b.Navigation("Profile")
                        .IsRequired();
                });

            modelBuilder.Entity("PhlegmaticOne.InnoGotchi.Domain.Models.UserProfile", b =>
                {
                    b.Navigation("Avatar");

                    b.Navigation("Collaborations");

                    b.Navigation("Farm")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
